# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@8575951200e472d5f2d95c625da0c7bec8217c42 # v1.161.0
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      
      - name: Generate en-us PDF
        uses: fifsky/html-to-pdf-action@master
        with:
          htmlFile: _site/index.html
          outputFile: _site/resume_en-us.pdf
          pdfOptions: '{"format": "A4", "margin": {"top": "10mm", "left": "10mm", "right": "10mm", "bottom": "10mm"}}'

      # Generate the PDF in French
      - name: Generate fr-fr PDF
        uses: fifsky/html-to-pdf-action@master
        with:
          htmlFile: _site/fr-fr/index.html
          outputFile: _site/fr-fr/resume_fr-fr.pdf
          pdfOptions: '{"format": "A4", "margin": {"top": "10mm", "left": "10mm", "right": "10mm", "bottom": "10mm"}}'
      
      - name: Push en-us pdf cv to main site assets
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source_file: '_site/resume_en-us.pdf'
          destination_repo: 'lanzac/lanzac.github.io'
          destination_folder: 'assets/pdf/en-us'
          user_email: 'a.lanrezac@gmail.com'
          user_name: 'lanzac'
          commit_message: 'Update en-us pdf cv'

      - name: Push fr-fr pdf cv to main site assets
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source_file: '_site/fr-fr/resume_fr-fr.pdf'
          destination_repo: 'lanzac/lanzac.github.io'
          destination_folder: 'assets/pdf/fr-fr'
          user_email: 'a.lanrezac@gmail.com'
          user_name: 'lanzac'
          commit_message: 'Update fr-fr pdf cv'
      

      - name: Send pdfs to main site assets
        uses: actions/checkout@v4
        with:
          repository: 'lanzac/lanzac.github.io'
          token: ${{ secrets.CV_SYNC_TOKEN }}
      - run: |
          cp _site/resume_en-us.pdf lanzac.github.io/assets/pdf/en-us
          cp _site/fr-fr/resume_fr-fr.pdf lanzac.github.io/assets/pdf/fr-fr
          cd lanzac.github.io
          git config --global user.name 'lanzac'
          git config --global user.email 'a.lanrezac@gmail.com'
          git add assets/pdf/en-us/resume_en-us.pdf assets/pdf/fr-fr/resume_fr-fr.pdf
          git commit -m "Update pdf cv"
          git push

  #     - name: Upload artifact
  #       # Automatically uploads an artifact from the './_site' directory by default
  #       uses: actions/upload-pages-artifact@v3

  # # Deployment job
  # deploy:
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v4
